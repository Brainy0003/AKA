<html>
<head>
<title>Programming 4NE1 - Introduction</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body bgcolor="#000000" text="#CC66FF">
<table width="100%" border="0">
  <tr> 
    <td width="50%">&nbsp;</td>
    <td width="50%"> 
      <div align="right"><a href="compilers.htm"><font size="-1" color="#FF9900">Skip 
        this rant</font></a></div>
    </td>
  </tr>
</table>
<p align="left"><font face="Geneva, Arial, Helvetica, san-serif"> So you want 
  to learn programming? I've tried to learn for years and could never seem to 
  make sense out of any programming tutorials. At first I told myself it was just 
  me, it couldn't be that complicated. But after wading through countless programming 
  manuals and tutorials a clear pattern began to emerge. Suddenly the answer became 
  clearer and clearer: <b>Programmers are incapable of speaking in plain English</b>. 
  Not only that, I have yet to see a tutorial on programming where the writer 
  can hold back the urge to impress you with everything they know about computer 
  science. I mean everything. I can't tell you how many times I got a book on 
  programming that doesn't start with a chapter called &quot;What is a Computer?&quot;. 
  The author then proceeds to bore you to sleep with virtually their entire databank 
  of knowledge beginning with the complete history of computers. Useless topics 
  like &quot;What is a Hard Drive?&quot;, &quot;What is RAM?&quot;, then maybe 
  a chapter or two on ones and zeros and how a computer only understands binary 
  language. Then they launch into an essay on assembly language: an early attempt 
  to translate all those ones and zeros into something slightly more readable, 
  like cryptic letters and numbers.<br>
  Finally about two thirds of the way through the book, they finally get to the 
  topic of programming: the reason you bought the book in the first place. Yay! 
  We're finally going to get some hands-on programming experience. Not yet. First 
  we are required to memorize pretty much every command there is in the programming 
  language before we even begin creating our first program.<br>
  With about 2 or 3 chapters left to go we finally get to make our first program, 
  usually the classic &quot;Hello World&quot; which prints something out on your 
  computer screen, like&quot;Hello&quot; or something short and sweet, something 
  which doesn't require a whole lot of typing and verifies that your first attempt 
  at programming even works. Now here is where you start to get a clue as to just 
  how geeky the author is. A sensible person who speaks in plain English would 
  give you a short bit of code which prints out &quot;Hi&quot; to the screen, 
  recognizing that you are someone who doesn't have all day to type endless pages 
  of unecessary code. A complete computer geek will have you sit there and type 
  up a page long program that prints all kinds of data to the screen, something 
  like: &quot;Hello, my name is Your_Name. I am a programmer. I really love the 
  book &quot;Programming Made Understandable&quot; and the author is a really 
  great guy..... etc., etc., etc.,. After you enter a whole page of mystery code, 
  perhaps you might try to run your sample code and get an error message. You 
  are left staring at your screen with the frustrated feeling of spending even 
  more of your ever dwindling free time creating a page-long mess which you have 
  no idea how to fix. Perhaps there was a comma in the wrong place, maybe you 
  didn't configure the compiler properly, who knows? Not me. Not you. The author 
  assumes everything works fine and goes on to project #2: a three page long piece 
  of indecipherable gobbledegook which utilizes all the commands you were supposed 
  to memorize back in the early, dull and boring chapters of the book. You look 
  around on the web for more answers and find that indeed, the answers are out 
  there, but it's going to cost you $39.95 for video #1 in a 24 part series. Lesson 
  #1 is called &quot;What is a Computer?&quot;. </font></p>
<p align="left"><font face="Geneva, Arial, Helvetica, san-serif">Perhaps you didn't 
  even make it to figuring out exactly what a compiler was. Computer geeks are 
  notorious for saying things like: &quot; now to compile your program, simply 
  go to the DOS prompt and run your favorite compiler from the command line.&quot; 
  Of course if you've never programmed before there's absolutely no reason why 
  you should know what a Command Prompt even is. My experience has been that whenever 
  a computer geek uses the word &quot;simply&quot; in a tutorial, whatever follows 
  is far from simple. C# tutorials assume you are already an experienced C++ programmer. 
  C++ tutorials assume you are migrating from C. C tutorials assume you're already 
  familiar with computer science. Computer science books assume you're familiar 
  with trigonometry, geometry, algebra, vectors, quaternions, etc. and all of 
  those topics assume you were one of those quiet kids who sat near the back of 
  class, and if you tried to communicate with them they would go and hide in a 
  corner. Computer nerds are very territorial. After all, this is the only thing 
  in this world they have a knack for and they don't want to let the world know 
  that it's not as difficult as they try to make it out to be. </font></p>
<table width="75%" border="0" bgcolor="#FFFF99" align="center" cellpadding="6">
  <tr> 
    <td><font face="Geneva, Arial, Helvetica, san-serif" color="#000000">Note: 
      Computer nerds love to use these little note fields to distract and further 
      confound any attempts to understand what they're blabbering about. Just 
      as you're beginning to grasp the fundamental concept of what a variable 
      declaration is, they will come out of left field and throw in something 
      like :<br>
      &quot;Note: in order for any of the lessons in this tutorial to work, you 
      must first change the Winbj.rxq file to accept itself as a void data object. 
      To do that simply load your system's WinLoad attributes file and set the 
      parameter's to Null, modify your autoexec.bat to represent the new changes. 
      Be sure the admin privledges are set to read and write null parity data. 
      It couldn't be simpler!&quot;</font></td>
  </tr>
</table>
<p align="left"><font face="Geneva, Arial, Helvetica, san-serif">I finally came 
  to the conclusion that computer geeks make way too much money and if they went 
  around just coming right out and telling people how to make simple programs, 
  that before long they might be out of their cushy $40 - $120 an hour jobs. After 
  going to college for 4 years or more to learn how to make sense out of endless 
  pages of technical gobbledegook, do you think they would just go around sharing 
  that information with everyone?</font></p>
<p align="left"><font face="Geneva, Arial, Helvetica, san-serif">The truth is 
  that pretty much anybody can be a programmer, you just have to get over your 
  phobia: the fear of using your computer at the text level. In other words we 
  have to cut you from that umbilical cord with training wheel: the Mouse. ( see 
  chapter &quot;What is a Mouse?&quot;)<br>
  That's right, you may think you're a big computer whiz because you can click 
  on a button which opens a browser and click on a link which opens your music 
  player and click on the play button and Voila! music comes out. You be's a geenyus. 
  Maybe all your friends who don't own a computer yet refer to you a &quot;the 
  computer geek&quot; now, which can be a huge boost to your ego, but sadly, you're 
  still an ordinary end user. Unfortunately the world of programming is not filled 
  with graphic images and animated dancing icons. For the most part, you will 
  spend most of your time staring at plain old black and white code.</font></p>
<p><font face="Geneva, Arial, Helvetica, san-serif">So like I said, if you had 
  a cushy job and wanted to prevent others from making sense out of simple information 
  you might want to encode it. That's what programming languages like C++ and 
  C# are basically: a bunch of cryptic symbols which represent various commands 
  to your computer. The programmer's argument being that short commands require 
  less typing than descriptive words. In the past there were more readable programming 
  languages such as BASIC or PASCAL which used nice descriptive words to construct 
  your program. Perhaps programmers were concerned that these would be too easy 
  for ordinary people to grasp so in order to protect their interests they came 
  up with much more versatile languages, but made them a lot less readable by 
  using short symbols and abbreviations in place of common commands, not unlike 
  an early, early language called Assembly Language, also known as Machine Code.</font></p>
<p><font face="Geneva, Arial, Helvetica, san-serif">When a child is 5 years old 
  he has the ability to memorize new words and languages at an accelerated rate. 
  As one gets older, it becomes more difficult. Since chances are that you are 
  not 5 years old, you can look forward to a lot of beating your head against 
  the wall, memorizing symbols which can be converted into Computereeze. Not only 
  that, common symbols which you are already familiar with may now mean something 
  entirely different. Like the % sign. Everybody knows what that means. But Noooooooooooo, 
  in C++ it may mean something entirely different. You have to accept the concept 
  that everything may not mean what it says, but is in reality a cryptic symbol 
  for something else</font></p>
<p align="center"><font face="Geneva, Arial, Helvetica, san-serif">Get on with 
  it already! Next Page: <a href="compilers.htm">Compilers</a></font></p>
<p align="center"><font face="Geneva, Arial, Helvetica, san-serif">No, I luv reading 
  rants. Continue with <a href="CSharp/CSharpSucks.htm">Why C# Sucks</a></font></p>
</body>
</html>
